name: Merge to Main

on:
  push:
    branches:
      - main
    paths-ignore:
      - ".github/ISSUE_TEMPLATE/*"
      - "**.md"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  codeql:
    name: Semantic Code Analysis
    runs-on: ubuntu-22.04
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - uses: actions/checkout@v3

      - name: Initialize
        uses: github/codeql-action/init@v2
        with:
          languages: javascript

      # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
      # If this step fails, then you should remove it and run the build manually (see below)
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  deploys-test:
    name: TEST Deployments
    needs:
      - codeql
    uses: bcgov/nr-quickstart-helpers/.github/workflows/_deploy.yml@main
    strategy:
      matrix:
        component: [init, backend, database, frontend]
        include:
          - component: init
            overwrite: false
            template_file: common/openshift.init.yml
            template_vars: -p ZONE=test
          - component: database
            overwrite: false
            template_file: database/openshift.deploy.yml
            template_vars:
              -p ZONE=test -p PROMOTE=${{ github.repository }}/database:test
              -p NAME=${{ github.event.repository.name }}
          - component: backend
            overwrite: true
            template_file: backend/openshift.deploy.yml
            template_vars:
              -p ZONE=test -p PROMOTE=${{ github.repository }}/backend:test
              -p NAME=${{ github.event.repository.name }}
          - component: frontend
            overwrite: true
            template_file: frontend/openshift.deploy.yml
            template_vars:
              -p ZONE=test -p PROMOTE=${{ github.repository }}/frontend:test
              -p NAME=${{ github.event.repository.name }}
    secrets:
      oc_namespace: ${{ secrets.OC_NAMESPACE }}
      oc_server: ${{ secrets.OC_SERVER }}
      oc_token: ${{ secrets.OC_TOKEN }}
    with:
      component: ${{ matrix.component }}
      environment: test
      overwrite: ${{ matrix.overwrite }}
      penetration_test: true
      repository: bcgov/nr-quickstart-typescript
      template_file: ${{ matrix.template_file }}
      template_vars: ${{ matrix.template_vars }}

  # https://github.com/marketplace/actions/aqua-security-trivy
  trivy-repo:
    name: Repository Report
    needs:
      - deploys-test
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@0.8.0
        with:
          scan-type: "fs"
          format: "sarif"
          output: "trivy-results.sarif"
          ignore-unfixed: true
          severity: "CRITICAL,HIGH"
          security-checks: "vuln,secret,config"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: "trivy-results.sarif"

  deploys-prod:
    name: PROD Deployments
    needs:
      - trivy-repo
    uses: bcgov/nr-quickstart-helpers/.github/workflows/_deploy.yml@main
    strategy:
      matrix:
        component: [init, backend, database, frontend]
        include:
          - component: init
            overwrite: false
            template_file: common/openshift.init.yml
            template_vars: -p ZONE=prod -p NAME=${{ github.event.repository.name }}
          - component: database
            overwrite: false
            template_file: database/openshift.deploy.yml
            template_vars:
              -p ZONE=prod -p PROMOTE=${{ github.repository }}/database:test
              -p NAME=${{ github.event.repository.name }}
          - component: backend
            overwrite: true
            template_file: backend/openshift.deploy.yml
            template_vars:
              -p ZONE=prod -p PROMOTE=${{ github.repository }}/backend:test
              -p NAME=${{ github.event.repository.name }}
          - component: frontend
            overwrite: true
            template_file: frontend/openshift.deploy.yml
            template_vars:
              -p ZONE=prod -p PROMOTE=${{ github.repository }}/frontend:test
              -p NAME=${{ github.event.repository.name }}
    secrets:
      oc_namespace: ${{ secrets.OC_NAMESPACE }}
      oc_server: ${{ secrets.OC_SERVER }}
      oc_token: ${{ secrets.OC_TOKEN }}
    with:
      component: ${{ matrix.component }}
      environment: prod
      overwrite: ${{ matrix.overwrite }}
      penetration_test: true
      repository: bcgov/nr-quickstart-typescript
      template_file: ${{ matrix.template_file }}
      template_vars: ${{ matrix.template_vars }}

  image-promotions:
    name: Promote images to PROD
    needs:
      - deploys-prod
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        component: [backend, frontend]
    steps:
      - uses: shrink/actions-docker-registry-tag@v3
        with:
          registry: ghcr.io
          repository: ${{ github.repository }}/${{ matrix.component }}
          target: test
          tags: prod
