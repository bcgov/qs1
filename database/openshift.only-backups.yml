# https://github.com/BCDevOps/backups/blob/master/openshift/templates/backup-cronjob/backup-cronjob.yaml
kind: Template
apiVersion: template.openshift.io/v1
parameters:
  - name: NAME
    description: Module name
    value: nr-quickstart-typescript
  - name: ZONE
    description: Deployment zone, e.g. pr-### or prod
    required: true
  - name: COMPONENT
    description: Component name
    value: backups
  - name: IMAGE_REGISTRY
    description: The base OpenShift docker registry
    value: image-registry.openshift-image-registry.svc:5000
  - name: IMAGE_NAMESPACE
    description: The namespace of the OpenShift project containing the imagestream for the application.
    required: true
  - name: DATABASE_DEFAULT_PORT
    description: The configured port for the database service
    value: 5432
  - name: DATABASE_NAME
    description: The name of the database.
    value: fom
  - name: DATABASE_USER_KEY_NAME
    description:
      The database user key name stored in database deployment resources specified
      by DATABASE_SECRET_NAME.
    value: database-user
  - name: DATABASE_PASSWORD_KEY_NAME
    description:
      The database password key name stored in database deployment resources
      specified by DATABASE_SECRET_NAME.
    value: database-password
  - name: BACKUP_STRATEGY
    description: The strategy to use for backups; for example daily, or rolling.
    required: false
    value: rolling
  - name: BACKUP_DIR
    description: The name of the root backup directory
    required: false
    value: /backups/
  - name: NUM_BACKUPS
    description: The number of backup files to be retained.  Used for the `daily` backup strategy.  Ignored when using the `rolling` backup strategy.
    required: false
    value: 5
  - name: DAILY_BACKUPS
    description: The number of daily backup files to be retained.  Used for the `rolling` backup strategy.
    required: false
    value: 7
  - name: WEEKLY_BACKUPS
    description: The number of weekly backup files to be retained.  Used for the `rolling` backup strategy.
    required: false
    value: 4
  - name: MONTHLY_BACKUPS
    displayName: Number of Monthly Backups to Retain
    description: The number of monthly backup files to be retained.  Used for the `rolling` backup strategy.
    required: false
    value: 1
  - name: JOB_SERVICE_ACCOUNT
    description: Name of the Service Account To Exeucte the Job As.
    value: default
    required: false
  - name: SUCCESS_JOBS_HISTORY_LIMIT
    description: The number of successful jobs that will be retained
    value: 5
    required: false
  - name: FAILED_JOBS_HISTORY_LIMIT
    description: The number of failed jobs that will be retained
    value: 2
    required: false
  - name: JOB_BACKOFF_LIMIT
    description: The number of attempts to try for a successful job outcome
    value: 0
  - description: Volume space available for data, e.g. 512Mi, 2Gi.
    name: PVC_SIZE
    value: 1Gi
  - name: CRON_MINUTES
    description: Random number, 0-60, for scheduling cronjobs
    from: "[0-5]{1}[0-9]{1}"
    generate: expression
objects:
  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: ${NAME}-${ZONE}-${COMPONENT}
      labels:
        app: ${NAME}-${ZONE}
  - kind: BuildConfig
    apiVersion: v1
    metadata:
      name: ${NAME}-${ZONE}-${COMPONENT}
      labels:
        app: ${NAME}-${ZONE}
    spec:
      metadata:
        labels:
          app: ${NAME}-${ZONE}
      triggers:
        - type: ImageChange
        - type: ConfigChange
      runPolicy: Serial
      source:
        type: Git
        git:
          uri: https://github.com/BCDevOps/backup-container.git
          ref: master
        contextDir: /docker
      strategy:
        type: Docker
        dockerStrategy:
          from:
            kind: DockerImage
            name: docker.io/centos/postgresql-13-centos7:20210722-70dc4d3
          dockerfilePath: Dockerfile
      output:
        to:
          kind: ImageStreamTag
          name: ${NAME}-${ZONE}-${COMPONENT}:${ZONE}-${COMPONENT}
  - kind: PersistentVolumeClaim
    apiVersion: v1
    metadata:
      name: ${NAME}-${ZONE}-${COMPONENT}
      labels:
        app: ${NAME}-${ZONE}
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: "${PVC_SIZE}"
      storageClassName: netapp-file-standard
  - kind: ConfigMap
    apiVersion: v1
    metadata:
      name: ${NAME}-${ZONE}-config
      labels:
        app: ${NAME}-${ZONE}
        cronjob: ${NAME}-${ZONE}
    data:
      DATABASE_SERVICE_NAME: "${NAME}-${ZONE}-db"
      DEFAULT_PORT: "${DATABASE_DEFAULT_PORT}"
      POSTGRESQL_DATABASE: "${DATABASE_NAME}"
      BACKUP_STRATEGY: "${BACKUP_STRATEGY}"
      RETENTION.NUM_BACKUPS: "${NUM_BACKUPS}"
      RETENTION.DAILY_BACKUPS: "${DAILY_BACKUPS}"
      RETENTION.WEEKLY_BACKUPS: "${WEEKLY_BACKUPS}"
      RETENTION.MONTHLY_BACKUPS: "${MONTHLY_BACKUPS}"
  - kind: CronJob
    apiVersion: "batch/v1"
    metadata:
      name: ${NAME}-${ZONE}-${COMPONENT}
      labels:
        app: ${NAME}-${ZONE}
        cronjob: ${NAME}-${ZONE}
    spec:
      schedule: "${CRON_MINUTES} 8 * * *" # Run daily at 8:xx AM UTC
      concurrencyPolicy: "Replace"
      successfulJobsHistoryLimit: "${{SUCCESS_JOBS_HISTORY_LIMIT}}"
      failedJobsHistoryLimit: "${{FAILED_JOBS_HISTORY_LIMIT}}"
      jobTemplate:
        metadata:
          labels:
            app: ${NAME}-${ZONE}
            cronjob: ${NAME}-${ZONE}
        spec:
          backoffLimit: ${{JOB_BACKOFF_LIMIT}}
          template:
            metadata:
              labels:
                app: ${NAME}-${ZONE}
                cronjob: ${NAME}-${ZONE}
            spec:
              containers:
                - name: ${NAME}-${ZONE}
                  image: "${IMAGE_REGISTRY}/${IMAGE_NAMESPACE}/${NAME}-${ZONE}-${COMPONENT}:${ZONE}-${COMPONENT}"
                  command:
                    - "/bin/bash"
                    - "-c"
                    - "/backup.sh -1"
                  volumeMounts:
                    - mountPath: "${BACKUP_DIR}"
                      name: "backup"
                  env:
                    - name: BACKUP_DIR
                      value: "${BACKUP_DIR}"
                    - name: BACKUP_STRATEGY
                      valueFrom:
                        configMapKeyRef:
                          name: "${NAME}-${ZONE}-config"
                          key: BACKUP_STRATEGY
                    - name: NUM_BACKUPS
                      valueFrom:
                        configMapKeyRef:
                          name: "${NAME}-${ZONE}-config"
                          key: RETENTION.NUM_BACKUPS
                          optional: true
                    - name: DAILY_BACKUPS
                      valueFrom:
                        configMapKeyRef:
                          name: "${NAME}-${ZONE}-config"
                          key: RETENTION.DAILY_BACKUPS
                          optional: true
                    - name: WEEKLY_BACKUPS
                      valueFrom:
                        configMapKeyRef:
                          name: "${NAME}-${ZONE}-config"
                          key: RETENTION.WEEKLY_BACKUPS
                          optional: true
                    - name: MONTHLY_BACKUPS
                      valueFrom:
                        configMapKeyRef:
                          name: "${NAME}-${ZONE}-config"
                          key: RETENTION.MONTHLY_BACKUPS
                          optional: true
                    - name: DATABASE_SERVICE_NAME
                      valueFrom:
                        configMapKeyRef:
                          name: "${NAME}-${ZONE}-config"
                          key: DATABASE_SERVICE_NAME
                    - name: DEFAULT_PORT
                      valueFrom:
                        configMapKeyRef:
                          name: "${NAME}-${ZONE}-config"
                          key: DEFAULT_PORT
                          optional: true
                    - name: POSTGRESQL_DATABASE
                      valueFrom:
                        configMapKeyRef:
                          name: "${NAME}-${ZONE}-config"
                          key: POSTGRESQL_DATABASE
                    - name: DATABASE_USER
                      valueFrom:
                        secretKeyRef:
                          name: ${NAME}-${ZONE}-db
                          key: "${DATABASE_USER_KEY_NAME}"
                    - name: DATABASE_PASSWORD
                      valueFrom:
                        secretKeyRef:
                          name: ${NAME}-${ZONE}-db
                          key: "${DATABASE_PASSWORD_KEY_NAME}"
              volumes:
                - name: backup
                  persistentVolumeClaim:
                    claimName: ${NAME}-${ZONE}-${COMPONENT}
              restartPolicy: "Never"
              terminationGracePeriodSeconds: 30
              activeDeadlineSeconds: 1600
              dnsPolicy: "ClusterFirst"
              serviceAccountName: "${JOB_SERVICE_ACCOUNT}"
              serviceAccount: "${JOB_SERVICE_ACCOUNT}"
